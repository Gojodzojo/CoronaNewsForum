{"version":3,"sources":["request.js","SectionBtn.js","Sections.js","PostPage.js","NewPost.js","App.js","index.js"],"names":["url","method","data","a","options","mode","body","JSON","stringify","headers","fetch","Resp","json","console","log","request","SectionBtn","title","author","id","to","Sections","useState","sections","setSections","useEffect","window","location","origin","then","newBtns","posts","map","key","className","PostPage","content","setContent","answerAuthor","setAnswerAuthor","answerText","setAnswerText","useParams","text","answersSections","answers","index","type","value","onChange","e","target","onClick","reload","addAnswer","style","clear","NewPost","setAuthor","setText","setTitle","history","useHistory","push","createPost","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5b39fa2.chunk.js","sourcesContent":["async function request(url, method, data)\r\n{\r\n    const options = {method: method, mode:'cors', body: JSON.stringify(data), headers: {'Content-Type': 'application/json'}}\r\n    try\r\n    {\r\n        const Resp = await fetch(url,options)\r\n        return await Resp.json()\r\n    }\r\n    catch(err)\r\n    {\r\n        console.log(err)\r\n        return 'Connection error'\r\n    }\r\n}\r\n\r\nexport default request","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction SectionBtn({title, author, id}) {\r\n    return(\r\n        <section>\r\n            <Link to={'/' + id}>\r\n                <h2>{title}</h2>\r\n                <h3>Wątek stworzony przez użytkownika {author}</h3>\r\n                <hr/>\r\n            </Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SectionBtn","import React, { useEffect, useState } from 'react'\r\nimport request from './request'\r\nimport SectionBtn from './SectionBtn'\r\nimport { Link } from 'react-router-dom'\r\nimport './Sections.scss'\r\n\r\nfunction Sections() {\r\n  const [sections, setSections] = useState([])\r\n\r\n  useEffect(() => {\r\n    console.log('lol')\r\n    request(window.location.origin + '/posts', 'GET')\r\n        .then(({posts}) => {\r\n          const newBtns = posts.map(({author, title, id}) => <SectionBtn author={author} title={title} id={id} key={id} />)\r\n          setSections(newBtns)\r\n        })\r\n    }, [])\r\n    \r\n  return (\r\n    <div className='Sections'>\r\n      <Link to='/newPost' id='createPost'>\r\n        Utwórz post\r\n      </Link>\r\n      { sections }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sections\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport request from './request'\r\nimport './PostPage.scss'\r\n\r\nfunction PostPage() {\r\n    const [content, setContent] = useState(<h1>Ładowanie</h1>)\r\n    const [answerAuthor, setAnswerAuthor] = useState('')\r\n    const [answerText, setAnswerText] = useState('')\r\n    const { id } = useParams()\r\n    const addAnswer = () => {\r\n        const data = {\r\n            author: answerAuthor,\r\n            text: answerText\r\n        }\r\n        request(window.location.origin + '/posts/' + id, 'POST', data).then(() => window.location.reload(false))\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        request(window.location.origin + '/posts/' + id, 'GET')\r\n            .then(({title, author, text, answers}) => {\r\n                const answersSections = answers.map(({author, text}, index) => {\r\n                    return(\r\n                        <section key={index} >\r\n                           <h2> {author} </h2>\r\n                           <p> {text} </p>\r\n                        </section>\r\n                    )\r\n                })\r\n                setContent(\r\n                    <div className='PostPage'>  \r\n                        <Link to='/' id='back'>\r\n                            Powrót\r\n                        </Link>\r\n                        <h1>{title}</h1>\r\n                        <section>                            \r\n                            <h2>{author}</h2>\r\n                            <p>{text}</p>\r\n                        </section>\r\n                        {answersSections}\r\n                        <section>\r\n                            <h2>Twoje imie</h2>\r\n                            <input\r\n                                type='text'\r\n                                value={answerAuthor}\r\n                                onChange={e => setAnswerAuthor(e.target.value)}\r\n                            />\r\n                            <h2>Tekst</h2>\r\n                            <textarea\r\n                                value={answerText}\r\n                                onChange={e => setAnswerText(e.target.value)}\r\n                            />                        \r\n                            <div\r\n                                className='addAnswer'\r\n                                onClick={() => addAnswer()}\r\n                            >\r\n                                Dodaj odpowiedź\r\n                            </div>\r\n                            <div style={{clear: 'both'}} />\r\n                        </section>\r\n                    </div>\r\n                )\r\n            })\r\n    }, [])\r\n    return content\r\n}\r\n\r\nexport default PostPage","import React, { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport request from './request'\r\nimport './NewPost.scss'\r\n\r\nfunction NewPost() {\r\n    const [author, setAuthor] = useState('')\r\n    const [text, setText] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const history = useHistory()\r\n    const createPost = () => {\r\n        const data = {\r\n            author: author,\r\n            text: text,\r\n            title: title\r\n        }\r\n        request(window.location.origin + '/posts/', 'POST', data).then(() => history.push('/'))\r\n    }\r\n    return(\r\n        <div className='NewPost'>\r\n            <Link to='/' id='back'>\r\n                Powrót\r\n            </Link>\r\n            <h1>Stwórz nowy post</h1>\r\n            <section>\r\n                <h2>Temat</h2>\r\n                <input\r\n                    type='text'\r\n                    value={title}\r\n                    onChange={e => setTitle(e.target.value)}                \r\n                />\r\n                <h2>Tekst</h2>\r\n                <textarea\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                />\r\n                <h2>Twoje imie</h2>\r\n                <input\r\n                    type='text'\r\n                    value={author}\r\n                    onChange={e => setAuthor(e.target.value)}\r\n                />\r\n                <div\r\n                    className='createPost'\r\n                    onClick={() => createPost()}\r\n                >Utwórz</div>\r\n                <div style={{clear: 'both'}} />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPost","import React from 'react';\nimport Sections from './Sections';\nimport PostPage from './PostPage';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport NewPost from './NewPost';\nimport './App.css'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Sections} />\n        <Route path=\"/newPost\" component={NewPost} />\n        <Route path=\"/:id\" component={PostPage} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}